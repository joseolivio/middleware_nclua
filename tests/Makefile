# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am -- Template for generating Makefile via Automake.
# Copyright (C) 2013-2018 PUC-Rio/Laboratorio TeleMidia
#
# This file is part of NCLua.
#
# NCLua is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# NCLua is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NCLua.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.common -- Common declarations.
# Copyright (C) 2013-2016 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.env -- Generates env.sh from AM_TESTS_ENVIRONMENT.
# Copyright (C) 2015-2018 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.valgrind -- Generate Valgrind suppressions.
# Copyright (C) 2013-2018 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/nclua
pkgincludedir = $(includedir)/nclua
pkglibdir = $(libdir)/nclua
pkglibexecdir = $(libexecdir)/nclua
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
noinst_PROGRAMS = libnclua-echo$(EXEEXT) lua$(EXEEXT)
am__append_1 = $(builddir)/env.sh $(builddir)/env.csh $(builddir)/gdb.cfg
am__append_2 = $(builddir)/env.sh $(builddir)/env.csh $(builddir)/gdb.cfg
#am__append_3 = $(builddir)/suppfile
#am__append_4 = $(builddir)/suppfile
#am__append_5 = --suppressions=$(builddir)/suppfile

# event.geolocation (handler plugin)
am__append_6 =  \
	test-event-geolocation-api.lua \
	test-event-geolocation-check.lua \
	test-event-geolocation-filter.lua \
	test-event-geolocation-engine.lua

# event.tcp_socket
# event.tcp (handler plugin)
am__append_7 = test-event-tcp-socket-api.lua \
	test-event-tcp-socket-new.lua \
	test-event-tcp-socket-is-socket.lua \
	test-event-tcp-socket-connect.lua \
	test-event-tcp-socket-send.lua \
	test-event-tcp-socket-receive.lua \
	test-event-tcp-socket-echo.lua \
	test-event-tcp-socket-timeout.lua \
	test-event-tcp-api.lua \
	test-event-tcp-check.lua \
	test-event-tcp-filter.lua \
	test-event-tcp-engine.lua

# event.http_soup
# event.http (handler plugin)
#am__append_8 = test-event-http-soup-api.lua \
#	test-event-http-soup-new.lua \
#	test-event-http-soup-is-soup.lua \
#	test-event-http-soup-cancel.lua \
#	test-event-http-soup-request.lua \
#	test-event-http-api.lua \
#	test-event-http-check.lua \
#	test-event-http-filter.lua \
#	test-event-http-engine.lua # requires \
#	network
check_PROGRAMS = $(am__EXEEXT_1)
TESTS = $(check_SCRIPTS) $(check_PROGRAMS)
XFAIL_TESTS = test-libnclua-open-x$(EXEEXT) \
	test-libncluaw-at-panic-x$(EXEEXT) \
	test-libncluaw-event-clone-x$(EXEEXT) \
	test-libncluaw-event-free-x$(EXEEXT)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/manywarnings.m4 \
	$(top_srcdir)/build-aux/perl.m4 \
	$(top_srcdir)/build-aux/util.m4 \
	$(top_srcdir)/build-aux/visibility.m4 \
	$(top_srcdir)/build-aux/warnings.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/lib/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
tests0_la_LIBADD =
tests0_la_SOURCES = tests0.c
tests0_la_OBJECTS = tests0_la-tests0.lo
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
tests0_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(tests0_la_CFLAGS) \
	$(CFLAGS) $(tests0_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = test-libnclua-open$(EXEEXT) \
	test-libnclua-open-x$(EXEEXT) test-libnclua-close$(EXEEXT) \
	test-libnclua-debug-get-surface$(EXEEXT) \
	test-libnclua-debug-dump-surface$(EXEEXT) \
	test-libnclua-paint$(EXEEXT) test-libnclua-resize$(EXEEXT) \
	test-libnclua-cycle$(EXEEXT) test-libncluaw-open$(EXEEXT) \
	test-libncluaw-at-panic$(EXEEXT) \
	test-libncluaw-at-panic-x$(EXEEXT) \
	test-libncluaw-event-clone$(EXEEXT) \
	test-libncluaw-event-clone-x$(EXEEXT) \
	test-libncluaw-event-free-x$(EXEEXT) \
	test-libncluaw-debug-get-surface$(EXEEXT) \
	test-libncluaw-debug-dump-surface$(EXEEXT) \
	test-libncluaw-cycle$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
libnclua_echo_SOURCES = libnclua-echo.c
libnclua_echo_OBJECTS = libnclua-echo.$(OBJEXT)
libnclua_echo_LDADD = $(LDADD)
libnclua_echo_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
lua_SOURCES = lua.c
lua_OBJECTS = lua.$(OBJEXT)
lua_LDADD = $(LDADD)
lua_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_close_SOURCES = test-libnclua-close.c
test_libnclua_close_OBJECTS = test-libnclua-close.$(OBJEXT)
test_libnclua_close_LDADD = $(LDADD)
test_libnclua_close_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_cycle_SOURCES = test-libnclua-cycle.c
test_libnclua_cycle_OBJECTS = test-libnclua-cycle.$(OBJEXT)
test_libnclua_cycle_LDADD = $(LDADD)
test_libnclua_cycle_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_debug_dump_surface_SOURCES =  \
	test-libnclua-debug-dump-surface.c
test_libnclua_debug_dump_surface_OBJECTS =  \
	test-libnclua-debug-dump-surface.$(OBJEXT)
test_libnclua_debug_dump_surface_LDADD = $(LDADD)
test_libnclua_debug_dump_surface_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libnclua_debug_get_surface_SOURCES =  \
	test-libnclua-debug-get-surface.c
test_libnclua_debug_get_surface_OBJECTS =  \
	test-libnclua-debug-get-surface.$(OBJEXT)
test_libnclua_debug_get_surface_LDADD = $(LDADD)
test_libnclua_debug_get_surface_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libnclua_open_SOURCES = test-libnclua-open.c
test_libnclua_open_OBJECTS = test-libnclua-open.$(OBJEXT)
test_libnclua_open_LDADD = $(LDADD)
test_libnclua_open_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_open_x_SOURCES = test-libnclua-open-x.c
test_libnclua_open_x_OBJECTS = test-libnclua-open-x.$(OBJEXT)
test_libnclua_open_x_LDADD = $(LDADD)
test_libnclua_open_x_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_paint_SOURCES = test-libnclua-paint.c
test_libnclua_paint_OBJECTS = test-libnclua-paint.$(OBJEXT)
test_libnclua_paint_LDADD = $(LDADD)
test_libnclua_paint_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libnclua_resize_SOURCES = test-libnclua-resize.c
test_libnclua_resize_OBJECTS = test-libnclua-resize.$(OBJEXT)
test_libnclua_resize_LDADD = $(LDADD)
test_libnclua_resize_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libncluaw_at_panic_SOURCES = test-libncluaw-at-panic.c
test_libncluaw_at_panic_OBJECTS = test-libncluaw-at-panic.$(OBJEXT)
test_libncluaw_at_panic_LDADD = $(LDADD)
test_libncluaw_at_panic_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_at_panic_x_SOURCES = test-libncluaw-at-panic-x.c
test_libncluaw_at_panic_x_OBJECTS =  \
	test-libncluaw-at-panic-x.$(OBJEXT)
test_libncluaw_at_panic_x_LDADD = $(LDADD)
test_libncluaw_at_panic_x_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_cycle_SOURCES = test-libncluaw-cycle.c
test_libncluaw_cycle_OBJECTS = test-libncluaw-cycle.$(OBJEXT)
test_libncluaw_cycle_LDADD = $(LDADD)
test_libncluaw_cycle_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
test_libncluaw_debug_dump_surface_SOURCES =  \
	test-libncluaw-debug-dump-surface.c
test_libncluaw_debug_dump_surface_OBJECTS =  \
	test-libncluaw-debug-dump-surface.$(OBJEXT)
test_libncluaw_debug_dump_surface_LDADD = $(LDADD)
test_libncluaw_debug_dump_surface_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_debug_get_surface_SOURCES =  \
	test-libncluaw-debug-get-surface.c
test_libncluaw_debug_get_surface_OBJECTS =  \
	test-libncluaw-debug-get-surface.$(OBJEXT)
test_libncluaw_debug_get_surface_LDADD = $(LDADD)
test_libncluaw_debug_get_surface_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_event_clone_SOURCES = test-libncluaw-event-clone.c
test_libncluaw_event_clone_OBJECTS =  \
	test-libncluaw-event-clone.$(OBJEXT)
test_libncluaw_event_clone_LDADD = $(LDADD)
test_libncluaw_event_clone_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_event_clone_x_SOURCES = test-libncluaw-event-clone-x.c
test_libncluaw_event_clone_x_OBJECTS =  \
	test-libncluaw-event-clone-x.$(OBJEXT)
test_libncluaw_event_clone_x_LDADD = $(LDADD)
test_libncluaw_event_clone_x_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_event_free_x_SOURCES = test-libncluaw-event-free-x.c
test_libncluaw_event_free_x_OBJECTS =  \
	test-libncluaw-event-free-x.$(OBJEXT)
test_libncluaw_event_free_x_LDADD = $(LDADD)
test_libncluaw_event_free_x_DEPENDENCIES =  \
	$(top_builddir)/lib/libnclua.la
test_libncluaw_open_SOURCES = test-libncluaw-open.c
test_libncluaw_open_OBJECTS = test-libncluaw-open.$(OBJEXT)
test_libncluaw_open_LDADD = $(LDADD)
test_libncluaw_open_DEPENDENCIES = $(top_builddir)/lib/libnclua.la
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = tests0.c libnclua-echo.c lua.c test-libnclua-close.c \
	test-libnclua-cycle.c test-libnclua-debug-dump-surface.c \
	test-libnclua-debug-get-surface.c test-libnclua-open.c \
	test-libnclua-open-x.c test-libnclua-paint.c \
	test-libnclua-resize.c test-libncluaw-at-panic.c \
	test-libncluaw-at-panic-x.c test-libncluaw-cycle.c \
	test-libncluaw-debug-dump-surface.c \
	test-libncluaw-debug-get-surface.c \
	test-libncluaw-event-clone.c test-libncluaw-event-clone-x.c \
	test-libncluaw-event-free-x.c test-libncluaw-open.c
DIST_SOURCES = tests0.c libnclua-echo.c lua.c test-libnclua-close.c \
	test-libnclua-cycle.c test-libnclua-debug-dump-surface.c \
	test-libnclua-debug-get-surface.c test-libnclua-open.c \
	test-libnclua-open-x.c test-libnclua-paint.c \
	test-libnclua-resize.c test-libncluaw-at-panic.c \
	test-libncluaw-at-panic-x.c test-libncluaw-cycle.c \
	test-libncluaw-debug-dump-surface.c \
	test-libncluaw-debug-get-surface.c \
	test-libncluaw-event-clone.c test-libncluaw-event-clone-x.c \
	test-libncluaw-event-free-x.c test-libncluaw-open.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
am__test_logs3 = $(am__test_logs2:.lua.log=.log)
LUA_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LUA_LOG_COMPILE = $(LUA_LOG_COMPILER) $(AM_LUA_LOG_FLAGS) \
	$(LUA_LOG_FLAGS)
TEST_LOGS = $(am__test_logs3:.sh.log=.log)
SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/Makefile.am.common \
	$(top_srcdir)/build-aux/Makefile.am.env \
	$(top_srcdir)/build-aux/Makefile.am.valgrind \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/missing automake-1.15
AWK = mawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12
CAIRO_LIBS = -lcairo
CAIRO_REQUIRED_VERSION = 1.10.2
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -pipe
CFLAG_VISIBILITY = -fvisibility=hidden
CPP = gcc -E
CPPFLAGS = 
CURL_CFLAGS = 
CURL_LIBS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GENHTML = 
GIO_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GIO_LIBS = -lgio-2.0 -lgobject-2.0 -lglib-2.0
GITLOG_FIX = build-aux/git-log-fix
GITLOG_START_DATE = 2014-04-08
GITLOG_TO_CHANGELOG = build-aux/gitlog-to-changelog
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_LIBS = -lgobject-2.0 -lglib-2.0
GLIB_REQUIRED_VERSION = 2.32.4
GREP = /bin/grep
GSTREAMER_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/lib/x86_64-linux-gnu/gstreamer-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTREAMER_LIBS = -lgstvideo-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GSTREAMER_REQUIRED_VERSION = 1.4.0
GTK_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircore -I/usr/include/mircookie -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GTK_REQUIRED_VERSION = 3.4.2
HAVE_VISIBILITY = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBCULR_REQUIRED_VERSION = 7.10.1
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_EXE_MACHINE_FLAG = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_MODULE_LDFLAGS = -shared -avoid-version
LT_SYS_LIBRARY_PATH = 
LUA_CFLAGS = -I/usr/include/lua5.2
LUA_LIBS = -llua5.2 -export-dynamic
LUA_REQUIRED_VERSION = 5.2
LUA_VERSION = 5.2
M4 = m4
MAKEINFO = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/missing makeinfo
MANIFEST_TOOL = :
MINGW_ROOT = 
MKDIR_P = /bin/mkdir -p
NCLUA_LIBTOOL_AGE = 1
NCLUA_LIBTOOL_CURRENT = 1
NCLUA_LIBTOOL_CURRENT_MINUS_AGE = 0
NCLUA_LIBTOOL_REVISION = 0
NCLUA_LIBTOOL_STRING = 1:0:1
NCLUA_VERSION_MAJOR = 1
NCLUA_VERSION_MICRO = 229
NCLUA_VERSION_MINOR = 3
NCLUA_VERSION_STRING = 1.3.229-2d631-dirty
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = nclua
PACKAGE_BUGREPORT = alan@telemidia.puc-rio.br
PACKAGE_NAME = NCLua
PACKAGE_STRING = NCLua 1.3.229-2d631-dirty
PACKAGE_TARNAME = nclua
PACKAGE_URL = http://github.com/telemidia/nclua
PACKAGE_VERSION = 1.3.229-2d631-dirty
PANGO_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12
PANGO_LIBS = -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo
PANGO_REQUIRED_VERSION = 1.30.0
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
SOEXT = .so
SOUP_CFLAGS = -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
SOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
SOUP_REQUIRED_VERSION = 2.42
STRIP = strip
VALGRIND = 
VERSION = 1.3.229-2d631-dirty
WARN_CFLAGS = 
WERROR_CFLAGS = 
WINDRES = 
abs_builddir = /home/osboxes/Desktop/nclua/tests
abs_srcdir = /home/osboxes/Desktop/nclua/tests
abs_top_builddir = /home/osboxes/Desktop/nclua
abs_top_srcdir = /home/osboxes/Desktop/nclua
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gstpluginsdir = /usr/lib/x86_64-linux-gnu/gstreamer-1.0
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/osboxes/Desktop/nclua/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
luadatadir = ${datadir}/lua/5.2
lualibdir = ${libdir}/lua/5.2
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_lib = 
ncluadatadir = ${datadir}/lua/5.2/nclua
nclualibdir = ${libdir}/lua/5.2/nclua
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
CLEANDIRS = 
CLEANFILES = *.core *.gcda *.gcno vgcore.* tests0.def $(am__append_2) \
	$(am__append_4) *.log *.trs test-libnclua-debug-dump.png \
	test-libncluaw-debug-dump.png $(NULL)
DISTCLEANFILES = 
EXTRA_DIST = $(check_SCRIPTS) libnclua-echo.lua \
	ref-cairo-1-14/test-canvas-drawEllipse-2-ref.png \
	ref-cairo-1-14/test-canvas-drawEllipse-3-ref.png \
	ref-cairo-1-14/test-canvas-drawEllipse-4-ref.png \
	ref-cairo-1-14/test-canvas-drawLine-2-ref.png \
	ref-cairo-1-14/test-canvas-drawLine-3-ref.png \
	ref-cairo-1-14/test-canvas-drawLine-4-ref.png \
	ref-cairo-1-14/test-canvas-drawPolygon-2-ref.png \
	ref-cairo-1-14/test-canvas-drawPolygon-3-ref.png \
	ref-cairo-1-14/test-canvas-drawPolygon-4-ref.png \
	ref-cairo-1-14/test-canvas-drawRoundRect-2-ref.png \
	ref-cairo-1-14/test-canvas-drawRoundRect-3-ref.png \
	ref-cairo-1-14/test-canvas-drawRoundRect-4-ref.png \
	ref-cairo-1-14/test-canvas-drawRoundRect-6-ref.png \
	ref-cairo-1-14/test-canvas-drawText-2-ref.png \
	ref-cairo-1-14/test-canvas-drawText-3-ref.png \
	ref-cairo-1-14/test-canvas-drawText-4-ref.png \
	ref-cairo-1-14/test-canvas-drawText-5-ref.png \
	ref-cairo-1-14/test-canvas-drawText-7-ref.png \
	ref-cairo-any/test-canvas-clear-1-ref.png \
	ref-cairo-any/test-canvas-clear-2-ref.png \
	ref-cairo-any/test-canvas-clear-3-ref.png \
	ref-cairo-any/test-canvas-clear-4-ref.png \
	ref-cairo-any/test-canvas-clear-5-ref.png \
	ref-cairo-any/test-canvas-clear-6-ref.png \
	ref-cairo-any/test-canvas-compose-1-ref.png \
	ref-cairo-any/test-canvas-compose-2-ref.png \
	ref-cairo-any/test-canvas-compose-3-ref.png \
	ref-cairo-any/test-canvas-compose-4-ref.png \
	ref-cairo-any/test-canvas-compose-5-ref.png \
	ref-cairo-any/test-canvas-compose-6-ref.png \
	ref-cairo-any/test-canvas-compose-7-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-1-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-2-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-3-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-4-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-5-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-6-ref.png \
	ref-cairo-any/test-canvas-drawEllipse-7-ref.png \
	ref-cairo-any/test-canvas-drawLine-1-ref.png \
	ref-cairo-any/test-canvas-drawLine-2-ref.png \
	ref-cairo-any/test-canvas-drawLine-3-ref.png \
	ref-cairo-any/test-canvas-drawLine-4-ref.png \
	ref-cairo-any/test-canvas-drawLine-5-ref.png \
	ref-cairo-any/test-canvas-drawLine-6-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-1-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-2-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-3-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-4-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-5-ref.png \
	ref-cairo-any/test-canvas-drawPolygon-6-ref.png \
	ref-cairo-any/test-canvas-drawRect-1-ref.png \
	ref-cairo-any/test-canvas-drawRect-2-ref.png \
	ref-cairo-any/test-canvas-drawRect-3-ref.png \
	ref-cairo-any/test-canvas-drawRect-4-ref.png \
	ref-cairo-any/test-canvas-drawRect-5-ref.png \
	ref-cairo-any/test-canvas-drawRect-6-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-1-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-2-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-3-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-4-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-5-ref.png \
	ref-cairo-any/test-canvas-drawRoundRect-6-ref.png \
	ref-cairo-any/test-canvas-drawText-1-ref.png \
	ref-cairo-any/test-canvas-drawText-2-ref.png \
	ref-cairo-any/test-canvas-drawText-3-ref.png \
	ref-cairo-any/test-canvas-drawText-4-ref.png \
	ref-cairo-any/test-canvas-drawText-5-ref.png \
	ref-cairo-any/test-canvas-drawText-6-ref.png \
	ref-cairo-any/test-canvas-drawText-7-ref.png \
	ref-cairo-any/test-canvas-flush-1-ref.png \
	ref-cairo-any/test-canvas-flush-2-ref.png \
	ref-cairo-any/test-canvas-flush-3-ref.png \
	ref-cairo-any/test-canvas-flush-4-ref.png \
	ref-cairo-any/test-canvas-new-1-ref.png \
	ref-cairo-any/test-canvas-pixel-1-ref.png sample/apple-red.png \
	sample/gnu-keys.png server.pl server.sh suppfile.m4 \
	test-libncluaw-cycle.lua tests.h tests.lua libcurl.m4 $(NULL)
MAINTAINERCLEANFILES = Makefile.in
AM_CPPFLAGS = -I$(top_srcdir)/lib -I$(top_builddir)/lib\
  -DTOP_SRCDIR=\"$(top_srcdir)\" -DTOP_BUILDDIR=\"$(top_builddir)\"

AM_CFLAGS = $(WERROR_CFLAGS) $(WARN_CFLAGS)\
  $(CAIRO_CFLAGS) $(GLIB_CFLAGS) $(LUA_CFLAGS)

AM_LDFLAGS = -static $(CAIRO_LIBS) $(GLIB_LIBS) $(LUA_LIBS)
LDADD = $(top_builddir)/lib/libnclua.la

# Auxiliary libraries.
noinst_LTLIBRARIES = tests0.la
#tests0_def_dependency = tests0.def
#tests0_export_symbols = -export-symbols $(tests0_def_dependency)\
#  -no-undefined $(LUA_LIBS)

tests0_la_DEPENDENCIES = $(tests0_def_dependency)
tests0_la_CFLAGS = $(AM_CFLAGS)
tests0_la_LDFLAGS = -module $(LT_MODULE_LDFLAGS) -rpath '/force-shared'\
  $(CAIRO_LIBS) $(GLIB_LIBS) $(tests0_export_symbols)


# Auxiliary scripts.
noinst_SCRIPTS = $(am__append_1) $(am__append_3)
perl_env_sh_get_tests_environment = \
  /^AM_TESTS_ENVIRONMENT\s*=\s*\\\n(.*?).\$$\(NULL\)/sm and printf "$$1";\
  $(NULL)

#WINROOT = $(MINGW_ROOT)
perl_env_sh_expand_variables = \
  s/^\s*//g; s/\\//g;\
  s:\$$\(SOEXT\):$(SOEXT):g;\
  s:\$$\(builddir\):$(abs_builddir):g;\
  s:\$$\(srcdir\):$(abs_srcdir):g;\
  s:\$$\(top_builddir\):$(abs_top_builddir):g;\
  s:\$$\(top_srcdir\):$(abs_top_srcdir):g;\
  $(NULL)

#perl_env_sh_expand_variables = \
#  s/^\s*//g; s/\\//g;\
#  s,\$$\(SOEXT\),$(SOEXT),g;\
#  s,\$$\(builddir\),$(WINROOT)$(abs_builddir),g;\
#  s,\$$\(srcdir\),$(WINTROOT)$(abs_srcdir),g;\
#  s,\$$\(top_builddir\),$(WINROOT)$(abs_top_builddir),g;\
#  s,\$$\(top_srcdir\),$(WINROOT)$(abs_top_srcdir),g;\
#  s,/,\\,g;\
#  $(NULL)

perl_env_sh_remove_ld_preload = \
  /^\s*export\s*LD_PRELOAD=/ or print;\
  $(NULL)

perl_env_csh_replace_env_sh = \
  s/^export (\w+)=(.*);$$/setenv $$1 $$2/;\
  $(NULL)

perl_gdb_cfg_replace_env_sh = \
  s/^export/set environment/;\
  s/(.*);$$/$$1/;\
  s/\"//g;\
  $(NULL)

VALGRIND_OPTIONS = $(am__append_5)
_VALGRIND = 
#_VALGRIND = $(VALGRIND) $(VALGRIND_OPTIONS)

# Generate env.sh, env.csh, and gdb.cfg.

# Configure Valgrind and generate suppfile from suppfile.m4.

# Setup test framework.
AM_COLOR_TESTS = always
DISABLE_HARD_ERRORS = true
TEST_EXTENSIONS = .lua .sh
LOG_COMPILER = $(_VALGRIND)
LUA_LOG_COMPILER = $(_VALGRIND) $(builddir)/lua
SH_LOG_COMPILER = $(SHELL)

# Setup tests environment.
canvas_so = canvas$(SOEXT)
stopwatch_so = stopwatch$(SOEXT)
#http_soup_so = http_soup$(SOEXT)
tcp_socket_so = tcp_socket$(SOEXT)
LD_PRELOAD = $(canvas_so):$(stopwatch_so):$(http_soup_so):$(tcp_socket_so)
AM_TESTS_ENVIRONMENT = \
  export GST_DEBUG="nclua:DEBUG";\
  export GST_PLUGIN_PATH="$(top_builddir)/lib/.libs";\
  export G_DEBUG="all";\
  export G_SLICE="always-malloc";\
  export LD_LIBRARY_PATH="$(top_builddir)/lib/.libs:$(top_builddir)/nclua:$(top_builddir)/nclua/event";\
  export LD_PRELOAD="$(LD_PRELOAD)";\
  export LUA_CPATH="$(builddir)/.libs/?$(SOEXT);$(top_builddir)/?$(SOEXT);;";\
  export LUA_PATH="$(top_srcdir)/?.lua;$(top_srcdir)/?/init.lua;$(top_srcdir)/tests/?.lua;;";\
  export MALLOC_CHECK_=1;\
  $(NULL)


# Test scripts.
# canvas
# dir
# event.queue
# event.engine
# event.stopwatch

# event.user (handler plugin)
# event.key (pass-through plugin)
# event.ncl (pass-through plugin)
# event.pointer (pass-through plugin)
# event.init
# libnclua
scripts = test-canvas-api.lua test-canvas-new.lua \
	test-canvas-attrAntiAlias.lua test-canvas-attrClip.lua \
	test-canvas-attrColor.lua test-canvas-attrCrop.lua \
	test-canvas-attrFilter.lua test-canvas-attrFlip.lua \
	test-canvas-attrFont.lua test-canvas-attrLineWidth.lua \
	test-canvas-attrOpacity.lua test-canvas-attrRotation.lua \
	test-canvas-attrScale.lua test-canvas-attrSize.lua \
	test-canvas-clear.lua test-canvas-compose.lua \
	test-canvas-drawEllipse.lua test-canvas-drawLine.lua \
	test-canvas-drawPolygon.lua test-canvas-drawRect.lua \
	test-canvas-drawRoundRect.lua test-canvas-drawText.lua \
	test-canvas-flush.lua test-canvas-measureText.lua \
	test-canvas-pixel.lua test-canvas-_resize.lua test-dir-api.lua \
	test-dir-test.lua test-dir-dir.lua test-event-queue-api.lua \
	test-event-queue-new.lua test-event-queue-enqueue.lua \
	test-event-queue-dequeue.lua test-event-engine-api.lua \
	test-event-engine-new.lua test-event-engine-send.lua \
	test-event-engine-receive.lua test-event-engine-reset.lua \
	test-event-engine-cycle.lua test-event-stopwatch-api.lua \
	test-event-stopwatch-new.lua test-event-stopwatch-get-time.lua \
	$(am__append_6) $(am__append_7) $(am__append_8) \
	test-event-user-api.lua test-event-user-check.lua \
	test-event-user-filter.lua test-event-user-engine.lua \
	test-event-key-api.lua test-event-key-check.lua \
	test-event-key-filter.lua test-event-ncl-api.lua \
	test-event-ncl-check.lua test-event-ncl-filter.lua \
	test-event-pointer-api.lua test-event-pointer-check.lua \
	test-event-pointer-filter.lua test-event-init-api.lua \
	test-event-init-init.lua test-event-init-load.lua \
	test-event-init-unload.lua test-event-init-post.lua \
	test-event-init-register.lua test-event-init-unregister.lua \
	test-event-init-cycle.lua test-event-init-uptime.lua \
	test-event-init-timer.lua test-libnclua-echo.sh
check_SCRIPTS = $(scripts)

# Test programs.
programs = test-libnclua-open test-libnclua-open-x test-libnclua-close \
	test-libnclua-debug-get-surface \
	test-libnclua-debug-dump-surface test-libnclua-paint \
	test-libnclua-resize test-libnclua-cycle test-libncluaw-open \
	test-libncluaw-at-panic test-libncluaw-at-panic-x \
	test-libncluaw-event-clone test-libncluaw-event-clone-x \
	test-libncluaw-event-free-x test-libncluaw-debug-get-surface \
	test-libncluaw-debug-dump-surface test-libncluaw-cycle
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .lua .lua$(EXEEXT) .o .obj .sh .sh$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/Makefile.am.common $(top_srcdir)/build-aux/Makefile.am.env $(top_srcdir)/build-aux/Makefile.am.valgrind $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/build-aux/Makefile.am.common $(top_srcdir)/build-aux/Makefile.am.env $(top_srcdir)/build-aux/Makefile.am.valgrind $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

tests0.la: $(tests0_la_OBJECTS) $(tests0_la_DEPENDENCIES) $(EXTRA_tests0_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tests0_la_LINK)  $(tests0_la_OBJECTS) $(tests0_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

libnclua-echo$(EXEEXT): $(libnclua_echo_OBJECTS) $(libnclua_echo_DEPENDENCIES) $(EXTRA_libnclua_echo_DEPENDENCIES) 
	@rm -f libnclua-echo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libnclua_echo_OBJECTS) $(libnclua_echo_LDADD) $(LIBS)

lua$(EXEEXT): $(lua_OBJECTS) $(lua_DEPENDENCIES) $(EXTRA_lua_DEPENDENCIES) 
	@rm -f lua$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lua_OBJECTS) $(lua_LDADD) $(LIBS)

test-libnclua-close$(EXEEXT): $(test_libnclua_close_OBJECTS) $(test_libnclua_close_DEPENDENCIES) $(EXTRA_test_libnclua_close_DEPENDENCIES) 
	@rm -f test-libnclua-close$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_close_OBJECTS) $(test_libnclua_close_LDADD) $(LIBS)

test-libnclua-cycle$(EXEEXT): $(test_libnclua_cycle_OBJECTS) $(test_libnclua_cycle_DEPENDENCIES) $(EXTRA_test_libnclua_cycle_DEPENDENCIES) 
	@rm -f test-libnclua-cycle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_cycle_OBJECTS) $(test_libnclua_cycle_LDADD) $(LIBS)

test-libnclua-debug-dump-surface$(EXEEXT): $(test_libnclua_debug_dump_surface_OBJECTS) $(test_libnclua_debug_dump_surface_DEPENDENCIES) $(EXTRA_test_libnclua_debug_dump_surface_DEPENDENCIES) 
	@rm -f test-libnclua-debug-dump-surface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_debug_dump_surface_OBJECTS) $(test_libnclua_debug_dump_surface_LDADD) $(LIBS)

test-libnclua-debug-get-surface$(EXEEXT): $(test_libnclua_debug_get_surface_OBJECTS) $(test_libnclua_debug_get_surface_DEPENDENCIES) $(EXTRA_test_libnclua_debug_get_surface_DEPENDENCIES) 
	@rm -f test-libnclua-debug-get-surface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_debug_get_surface_OBJECTS) $(test_libnclua_debug_get_surface_LDADD) $(LIBS)

test-libnclua-open$(EXEEXT): $(test_libnclua_open_OBJECTS) $(test_libnclua_open_DEPENDENCIES) $(EXTRA_test_libnclua_open_DEPENDENCIES) 
	@rm -f test-libnclua-open$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_open_OBJECTS) $(test_libnclua_open_LDADD) $(LIBS)

test-libnclua-open-x$(EXEEXT): $(test_libnclua_open_x_OBJECTS) $(test_libnclua_open_x_DEPENDENCIES) $(EXTRA_test_libnclua_open_x_DEPENDENCIES) 
	@rm -f test-libnclua-open-x$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_open_x_OBJECTS) $(test_libnclua_open_x_LDADD) $(LIBS)

test-libnclua-paint$(EXEEXT): $(test_libnclua_paint_OBJECTS) $(test_libnclua_paint_DEPENDENCIES) $(EXTRA_test_libnclua_paint_DEPENDENCIES) 
	@rm -f test-libnclua-paint$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_paint_OBJECTS) $(test_libnclua_paint_LDADD) $(LIBS)

test-libnclua-resize$(EXEEXT): $(test_libnclua_resize_OBJECTS) $(test_libnclua_resize_DEPENDENCIES) $(EXTRA_test_libnclua_resize_DEPENDENCIES) 
	@rm -f test-libnclua-resize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libnclua_resize_OBJECTS) $(test_libnclua_resize_LDADD) $(LIBS)

test-libncluaw-at-panic$(EXEEXT): $(test_libncluaw_at_panic_OBJECTS) $(test_libncluaw_at_panic_DEPENDENCIES) $(EXTRA_test_libncluaw_at_panic_DEPENDENCIES) 
	@rm -f test-libncluaw-at-panic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_at_panic_OBJECTS) $(test_libncluaw_at_panic_LDADD) $(LIBS)

test-libncluaw-at-panic-x$(EXEEXT): $(test_libncluaw_at_panic_x_OBJECTS) $(test_libncluaw_at_panic_x_DEPENDENCIES) $(EXTRA_test_libncluaw_at_panic_x_DEPENDENCIES) 
	@rm -f test-libncluaw-at-panic-x$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_at_panic_x_OBJECTS) $(test_libncluaw_at_panic_x_LDADD) $(LIBS)

test-libncluaw-cycle$(EXEEXT): $(test_libncluaw_cycle_OBJECTS) $(test_libncluaw_cycle_DEPENDENCIES) $(EXTRA_test_libncluaw_cycle_DEPENDENCIES) 
	@rm -f test-libncluaw-cycle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_cycle_OBJECTS) $(test_libncluaw_cycle_LDADD) $(LIBS)

test-libncluaw-debug-dump-surface$(EXEEXT): $(test_libncluaw_debug_dump_surface_OBJECTS) $(test_libncluaw_debug_dump_surface_DEPENDENCIES) $(EXTRA_test_libncluaw_debug_dump_surface_DEPENDENCIES) 
	@rm -f test-libncluaw-debug-dump-surface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_debug_dump_surface_OBJECTS) $(test_libncluaw_debug_dump_surface_LDADD) $(LIBS)

test-libncluaw-debug-get-surface$(EXEEXT): $(test_libncluaw_debug_get_surface_OBJECTS) $(test_libncluaw_debug_get_surface_DEPENDENCIES) $(EXTRA_test_libncluaw_debug_get_surface_DEPENDENCIES) 
	@rm -f test-libncluaw-debug-get-surface$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_debug_get_surface_OBJECTS) $(test_libncluaw_debug_get_surface_LDADD) $(LIBS)

test-libncluaw-event-clone$(EXEEXT): $(test_libncluaw_event_clone_OBJECTS) $(test_libncluaw_event_clone_DEPENDENCIES) $(EXTRA_test_libncluaw_event_clone_DEPENDENCIES) 
	@rm -f test-libncluaw-event-clone$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_event_clone_OBJECTS) $(test_libncluaw_event_clone_LDADD) $(LIBS)

test-libncluaw-event-clone-x$(EXEEXT): $(test_libncluaw_event_clone_x_OBJECTS) $(test_libncluaw_event_clone_x_DEPENDENCIES) $(EXTRA_test_libncluaw_event_clone_x_DEPENDENCIES) 
	@rm -f test-libncluaw-event-clone-x$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_event_clone_x_OBJECTS) $(test_libncluaw_event_clone_x_LDADD) $(LIBS)

test-libncluaw-event-free-x$(EXEEXT): $(test_libncluaw_event_free_x_OBJECTS) $(test_libncluaw_event_free_x_DEPENDENCIES) $(EXTRA_test_libncluaw_event_free_x_DEPENDENCIES) 
	@rm -f test-libncluaw-event-free-x$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_event_free_x_OBJECTS) $(test_libncluaw_event_free_x_LDADD) $(LIBS)

test-libncluaw-open$(EXEEXT): $(test_libncluaw_open_OBJECTS) $(test_libncluaw_open_DEPENDENCIES) $(EXTRA_test_libncluaw_open_DEPENDENCIES) 
	@rm -f test-libncluaw-open$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_libncluaw_open_OBJECTS) $(test_libncluaw_open_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libnclua-echo.Po
include ./$(DEPDIR)/lua.Po
include ./$(DEPDIR)/test-libnclua-close.Po
include ./$(DEPDIR)/test-libnclua-cycle.Po
include ./$(DEPDIR)/test-libnclua-debug-dump-surface.Po
include ./$(DEPDIR)/test-libnclua-debug-get-surface.Po
include ./$(DEPDIR)/test-libnclua-open-x.Po
include ./$(DEPDIR)/test-libnclua-open.Po
include ./$(DEPDIR)/test-libnclua-paint.Po
include ./$(DEPDIR)/test-libnclua-resize.Po
include ./$(DEPDIR)/test-libncluaw-at-panic-x.Po
include ./$(DEPDIR)/test-libncluaw-at-panic.Po
include ./$(DEPDIR)/test-libncluaw-cycle.Po
include ./$(DEPDIR)/test-libncluaw-debug-dump-surface.Po
include ./$(DEPDIR)/test-libncluaw-debug-get-surface.Po
include ./$(DEPDIR)/test-libncluaw-event-clone-x.Po
include ./$(DEPDIR)/test-libncluaw-event-clone.Po
include ./$(DEPDIR)/test-libncluaw-event-free-x.Po
include ./$(DEPDIR)/test-libncluaw-open.Po
include ./$(DEPDIR)/tests0_la-tests0.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

tests0_la-tests0.lo: tests0.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests0_la_CFLAGS) $(CFLAGS) -MT tests0_la-tests0.lo -MD -MP -MF $(DEPDIR)/tests0_la-tests0.Tpo -c -o tests0_la-tests0.lo `test -f 'tests0.c' || echo '$(srcdir)/'`tests0.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tests0_la-tests0.Tpo $(DEPDIR)/tests0_la-tests0.Plo
#	$(AM_V_CC)source='tests0.c' object='tests0_la-tests0.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests0_la_CFLAGS) $(CFLAGS) -c -o tests0_la-tests0.lo `test -f 'tests0.c' || echo '$(srcdir)/'`tests0.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test-libnclua-open.log: test-libnclua-open$(EXEEXT)
	@p='test-libnclua-open$(EXEEXT)'; \
	b='test-libnclua-open'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-open-x.log: test-libnclua-open-x$(EXEEXT)
	@p='test-libnclua-open-x$(EXEEXT)'; \
	b='test-libnclua-open-x'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-close.log: test-libnclua-close$(EXEEXT)
	@p='test-libnclua-close$(EXEEXT)'; \
	b='test-libnclua-close'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-debug-get-surface.log: test-libnclua-debug-get-surface$(EXEEXT)
	@p='test-libnclua-debug-get-surface$(EXEEXT)'; \
	b='test-libnclua-debug-get-surface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-debug-dump-surface.log: test-libnclua-debug-dump-surface$(EXEEXT)
	@p='test-libnclua-debug-dump-surface$(EXEEXT)'; \
	b='test-libnclua-debug-dump-surface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-paint.log: test-libnclua-paint$(EXEEXT)
	@p='test-libnclua-paint$(EXEEXT)'; \
	b='test-libnclua-paint'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-resize.log: test-libnclua-resize$(EXEEXT)
	@p='test-libnclua-resize$(EXEEXT)'; \
	b='test-libnclua-resize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libnclua-cycle.log: test-libnclua-cycle$(EXEEXT)
	@p='test-libnclua-cycle$(EXEEXT)'; \
	b='test-libnclua-cycle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-open.log: test-libncluaw-open$(EXEEXT)
	@p='test-libncluaw-open$(EXEEXT)'; \
	b='test-libncluaw-open'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-at-panic.log: test-libncluaw-at-panic$(EXEEXT)
	@p='test-libncluaw-at-panic$(EXEEXT)'; \
	b='test-libncluaw-at-panic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-at-panic-x.log: test-libncluaw-at-panic-x$(EXEEXT)
	@p='test-libncluaw-at-panic-x$(EXEEXT)'; \
	b='test-libncluaw-at-panic-x'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-event-clone.log: test-libncluaw-event-clone$(EXEEXT)
	@p='test-libncluaw-event-clone$(EXEEXT)'; \
	b='test-libncluaw-event-clone'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-event-clone-x.log: test-libncluaw-event-clone-x$(EXEEXT)
	@p='test-libncluaw-event-clone-x$(EXEEXT)'; \
	b='test-libncluaw-event-clone-x'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-event-free-x.log: test-libncluaw-event-free-x$(EXEEXT)
	@p='test-libncluaw-event-free-x$(EXEEXT)'; \
	b='test-libncluaw-event-free-x'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-debug-get-surface.log: test-libncluaw-debug-get-surface$(EXEEXT)
	@p='test-libncluaw-debug-get-surface$(EXEEXT)'; \
	b='test-libncluaw-debug-get-surface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-debug-dump-surface.log: test-libncluaw-debug-dump-surface$(EXEEXT)
	@p='test-libncluaw-debug-dump-surface$(EXEEXT)'; \
	b='test-libncluaw-debug-dump-surface'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-libncluaw-cycle.log: test-libncluaw-cycle$(EXEEXT)
	@p='test-libncluaw-cycle$(EXEEXT)'; \
	b='test-libncluaw-cycle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.lua.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(LUA_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LUA_LOG_DRIVER_FLAGS) $(LUA_LOG_DRIVER_FLAGS) -- $(LUA_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.lua$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(LUA_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_LUA_LOG_DRIVER_FLAGS) $(LUA_LOG_DRIVER_FLAGS) -- $(LUA_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.sh$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Local Variables:
# mode: makefile
# End:
tests0.def:
	$(AM_V_GEN) (echo EXPORTS;\
	echo luaopen_tests0) >$@

$(builddir)/env.sh:
	$(AM_V_GEN)cat $(builddir)/Makefile\
	  | $(PERL) -00 -wnle '$(perl_env_sh_get_tests_environment)'\
	  | $(PERL) -wple '$(perl_env_sh_expand_variables)'\
	  | $(PERL) -wnle '$(perl_env_sh_remove_ld_preload)' > $@

$(builddir)/env.csh: $(builddir)/env.sh
	$(AM_V_GEN)cat $(builddir)/env.sh\
	  | $(PERL) -wple '$(perl_env_csh_replace_env_sh)' > $@

$(builddir)/gdb.cfg: $(builddir)/env.sh
	$(AM_V_GEN)cat $(builddir)/env.sh\
	  | $(PERL) -wple '$(perl_gdb_cfg_replace_env_sh)' > $@

# Local Variables:
# mode: makefile
# End:
#$(builddir)/suppfile: $(srcdir)/suppfile.m4
#	$(AM_V_GEN)$(M4) $(srcdir)/suppfile.m4 > $@

# Local Variables:
# mode: makefile
# End:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
